#!/bin/bash

# DNS fix for private networks that do not allow DNS requests to external servers
# Course Version: SEC450_2_G01_01

# Lab array
labs=("2.1" "5.3")

# Default Gateway flag to trigger attempt with default gateway if DNS server fails
defGatewayFlag=false
# Get the DNS server used by the VM
usrIP=$(systemd-resolve --status | grep -m1 -Po 'DNS Servers: \K(\d{1,3}\.){3}\d{1,3}')

# Ensure the DNS IP is a valid IPv4 IP and that it is a DNS server
# If fails any test ask for a new IP from the user
while [ -z $usrIP ] || [ $(dig @"$usrIP" sec450.com A +time=10 +tries=1 | grep "connection timed out" -c) -gt 0 ]
do
    # Get default gateway as an alternative to the DNS server configured on the VM
    defGateway=$(ip route show default | grep -Po 'default via \K(\d{1,3}\.){3}\d{1,3}')
    # Do not attempt gateway substitution unless action is apply, the gateway and DNS are not equal and if not attempted before
    if [ $action == "apply" ] && ! [ $defGateway == $usrIP ] && ! $defGatewayFlag
    then
        usrIP=$defGateway
        defGatewayFlag=true
    else
        echo "DNS server could not be reached." >&2
        exit 1
    fi
done

# Ensure that the IP is not used as a DNS server already
if [ $(egrep -A5 "dns|WEBPASSWORD" /labs/2.1/docker-compose.yaml /labs/5.3/docker-compose.yaml | grep -ivE "\#Restricted DNS.*Fix" | grep $usrIP -c) -gt 0 ]
then
    echo "Cannot use $usrIP as the DNS server, it already exists as a DNS server in the lab config file." >&2
    exit 1
fi

    # Check if user applied fix override has been performed
    # Do not apply fix and exit if it has been applied
if [ $(grep -c "#Restricted DNS Fix" /labs/2.1/docker-compose.yaml /labs/5.3/docker-compose.yaml) -eq 0 ]
then
    # Loop through the labs array and implement fix in each lab
    for lab in ${labs[@]}
    do
        cd /labs/$lab

        # Create backup only if a backup does not already exist
        if ! [ -f docker-compose.yaml.bk ]
        then
            cp docker-compose.yaml docker-compose.yaml.bk
        fi

        # Remove previous instances of the fix
        # Find instance of "#Restricted DNS Service Fix" comment and delete the line on that
        if [ $(grep -c "#Restricted DNS Service Fix" docker-compose.yaml) -gt 0 ]
        then
            sed -i '/#Restricted DNS Service Fix/d' docker-compose.yaml
        fi

        # Add lines to define DNS config
        sed -i "/dns:/a \      - $usrIP #Restricted DNS Service Fix" docker-compose.yaml
        sed -i "/WEBPASSWORD/a \      DNS1: '$usrIP' #Restricted DNS Service Fix \n      DNS2: 'no' #Restricted DNS Service Fix \n      PIHOLE_DNS_1: '$usrIP' #Restricted DNS Service Fix \n      PIHOLE_DNS_2: 'no' #Restricted DNS Service Fix" docker-compose.yaml
    done
else
    echo "User applied override performed." >&2
    exit 1
fi